version: '3.8'

services:
  postgres:
    image: postgres:16.2
    container_name: uber-popug-task-tracker-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: 'db_uber_popug_task_tracker'
      POSTGRES_USER: 'dbusername'
      POSTGRES_PASSWORD: 'dbpassword'
    labels:
      org.springframework.boot.ignore: true

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: uber-popug-task-tracker-kafka-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: uber-popug-task-tracker-kafka
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: uber-popug-task-tracker-kafka-init
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics...'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists \
      --topic task-workflow-actions.1 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists \
      --topic task-lifecycle.stream.1 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "
